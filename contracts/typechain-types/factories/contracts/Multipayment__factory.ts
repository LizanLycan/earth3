/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Multipayment,
  MultipaymentInterface,
} from "../../contracts/Multipayment";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amountsToTransfer",
        type: "uint256[]",
      },
    ],
    name: "BatchPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "receivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amountsToTransfer",
            type: "uint256[]",
          },
        ],
        internalType: "struct Multipayment.Payment[]",
        name: "_payments",
        type: "tuple[]",
      },
    ],
    name: "performMultiPayment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114cf806100206000396000f3fe60806040526004361061004e5760003560e01c8063715018a61461005a5780638129fc1c146100715780638da5cb5b14610088578063db9d0334146100b3578063f2fde38b146100cf57610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f6100f8565b005b34801561007d57600080fd5b5061008661010c565b005b34801561009457600080fd5b5061009d610252565b6040516100aa9190610aa2565b60405180910390f35b6100cd60048036038101906100c89190610b2c565b61027c565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610ba5565b610405565b005b610100610489565b61010a6000610507565b565b60008060019054906101000a900460ff1615905080801561013d5750600160008054906101000a900460ff1660ff16105b8061016a575061014c306105cd565b1580156101695750600160008054906101000a900460ff1660ff16145b5b6101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090610c55565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156101e6576001600060016101000a81548160ff0219169083151502179055505b6101ee6105f0565b6101f6610649565b801561024f5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516102469190610cc7565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102846106a2565b60005b828290508110156103f8578282828181106102a5576102a4610ce2565b5b90506020028101906102b79190610d20565b80602001906102c69190610d48565b90508383838181106102db576102da610ce2565b5b90506020028101906102ed9190610d20565b80604001906102fc9190610dab565b90501461033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033590610e5a565b60405180910390fd5b6103e583838381811061035457610353610ce2565b5b90506020028101906103669190610d20565b60000160208101906103789190610ba5565b84848481811061038b5761038a610ce2565b5b905060200281019061039d9190610d20565b80602001906103ac9190610d48565b8686868181106103bf576103be610ce2565b5b90506020028101906103d19190610d20565b80604001906103e09190610dab565b6106f2565b80806103f090610eb3565b915050610287565b5061040161083d565b5050565b61040d610489565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610f6e565b60405180910390fd5b61048681610507565b50565b610491610847565b73ffffffffffffffffffffffffffffffffffffffff166104af610252565b73ffffffffffffffffffffffffffffffffffffffff1614610505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fc90610fda565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106369061106c565b60405180910390fd5b61064761084f565b565b600060019054906101000a900460ff16610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f9061106c565b60405180910390fd5b6106a06108a8565b565b600260655414156106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df906110d8565b60405180910390fd5b6002606581905550565b60005b848490508110156107f657600073ffffffffffffffffffffffffffffffffffffffff1685858381811061072b5761072a610ce2565b5b90506020020160208101906107409190610ba5565b73ffffffffffffffffffffffffffffffffffffffff161415610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90611144565b60405180910390fd5b6107e386338787858181106107af576107ae610ce2565b5b90506020020160208101906107c49190610ba5565b8686868181106107d7576107d6610ce2565b5b90506020020135610909565b80806107ee90610eb3565b9150506106f5565b507f61296616dea919da05ed0d5608a730a6f4f39d0703b9d8819da47e233c9a92d9858585858560405161082e9594939291906112a8565b60405180910390a15050505050565b6001606581905550565b600033905090565b600060019054906101000a900460ff1661089e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108959061106c565b60405180910390fd5b6001606581905550565b600060019054906101000a900460ff166108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee9061106c565b60405180910390fd5b610907610902610847565b610507565b565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161094093929190611300565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109aa91906113b1565b6000604051808303816000865af19150503d80600081146109e7576040519150601f19603f3d011682016040523d82523d6000602084013e6109ec565b606091505b5091509150818015610a1a5750600081511480610a19575080806020019051810190610a189190611400565b5b5b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090611479565b60405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8c82610a61565b9050919050565b610a9c81610a81565b82525050565b6000602082019050610ab76000830184610a93565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610aec57610aeb610ac7565b5b8235905067ffffffffffffffff811115610b0957610b08610acc565b5b602083019150836020820283011115610b2557610b24610ad1565b5b9250929050565b60008060208385031215610b4357610b42610abd565b5b600083013567ffffffffffffffff811115610b6157610b60610ac2565b5b610b6d85828601610ad6565b92509250509250929050565b610b8281610a81565b8114610b8d57600080fd5b50565b600081359050610b9f81610b79565b92915050565b600060208284031215610bbb57610bba610abd565b5b6000610bc984828501610b90565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610c3f602e83610bd2565b9150610c4a82610be3565b604082019050919050565b60006020820190508181036000830152610c6e81610c32565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000610cb1610cac610ca784610c75565b610c8c565b610c7f565b9050919050565b610cc181610c96565b82525050565b6000602082019050610cdc6000830184610cb8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600082356001606003833603038112610d3c57610d3b610d11565b5b80830191505092915050565b60008083356001602003843603038112610d6557610d64610d11565b5b80840192508235915067ffffffffffffffff821115610d8757610d86610d16565b5b602083019250602082023603831315610da357610da2610d1b565b5b509250929050565b60008083356001602003843603038112610dc857610dc7610d11565b5b80840192508235915067ffffffffffffffff821115610dea57610de9610d16565b5b602083019250602082023603831315610e0657610e05610d1b565b5b509250929050565b7f417272617973206d75737420686176652073616d65206c656e67746800000000600082015250565b6000610e44601c83610bd2565b9150610e4f82610e0e565b602082019050919050565b60006020820190508181036000830152610e7381610e37565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000610ebe82610ea9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ef157610ef0610e7a565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f58602683610bd2565b9150610f6382610efc565b604082019050919050565b60006020820190508181036000830152610f8781610f4b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fc4602083610bd2565b9150610fcf82610f8e565b602082019050919050565b60006020820190508181036000830152610ff381610fb7565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611056602b83610bd2565b915061106182610ffa565b604082019050919050565b6000602082019050818103600083015261108581611049565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006110c2601f83610bd2565b91506110cd8261108c565b602082019050919050565b600060208201905081810360008301526110f1816110b5565b9050919050565b7f43616e6e6f742073656e6420746f206120302061646472657373000000000000600082015250565b600061112e601a83610bd2565b9150611139826110f8565b602082019050919050565b6000602082019050818103600083015261115d81611121565b9050919050565b600082825260208201905092915050565b6000819050919050565b61118881610a81565b82525050565b600061119a838361117f565b60208301905092915050565b60006111b56020840184610b90565b905092915050565b6000602082019050919050565b60006111d68385611164565b93506111e182611175565b8060005b8581101561121a576111f782846111a6565b611201888261118e565b975061120c836111bd565b9250506001810190506111e5565b5085925050509392505050565b600082825260208201905092915050565b600080fd5b82818337600083830152505050565b60006112588385611227565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561128b5761128a611238565b5b60208302925061129c83858461123d565b82840190509392505050565b60006060820190506112bd6000830188610a93565b81810360208301526112d08186886111ca565b905081810360408301526112e581848661124c565b90509695505050505050565b6112fa81610ea9565b82525050565b60006060820190506113156000830186610a93565b6113226020830185610a93565b61132f60408301846112f1565b949350505050565b600081519050919050565b600081905092915050565b60005b8381101561136b578082015181840152602081019050611350565b8381111561137a576000848401525b50505050565b600061138b82611337565b6113958185611342565b93506113a581856020860161134d565b80840191505092915050565b60006113bd8284611380565b915081905092915050565b60008115159050919050565b6113dd816113c8565b81146113e857600080fd5b50565b6000815190506113fa816113d4565b92915050565b60006020828403121561141657611415610abd565b5b6000611424848285016113eb565b91505092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000611463600383610bd2565b915061146e8261142d565b602082019050919050565b6000602082019050818103600083015261149281611456565b905091905056fea264697066735822122046df28d86b8c891259fae043516a23513183338546e5d42ec3df3d7cf3534a1c64736f6c63430008090033";

type MultipaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultipaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multipayment__factory extends ContractFactory {
  constructor(...args: MultipaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Multipayment> {
    return super.deploy(overrides || {}) as Promise<Multipayment>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Multipayment {
    return super.attach(address) as Multipayment;
  }
  override connect(signer: Signer): Multipayment__factory {
    return super.connect(signer) as Multipayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultipaymentInterface {
    return new utils.Interface(_abi) as MultipaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multipayment {
    return new Contract(address, _abi, signerOrProvider) as Multipayment;
  }
}
